import React, { useState } from 'react';
import './LocationPermission.css';

const LocationPermission = ({ onLocationDetected, onSkip, language }) => {
  const [isDetecting, setIsDetecting] = useState(false);
  const [progress, setProgress] = useState('');
  const [error, setError] = useState('');

  const translations = {
    hi: {
      title: 'üìç ‡§Ö‡§™‡§®‡§æ ‡§∏‡•ç‡§•‡§æ‡§® ‡§ñ‡•ã‡§ú‡•á‡§Ç',
      subtitle: '‡§π‡§Æ ‡§Ü‡§™‡§ï‡•á ‡§®‡§ú‡§¶‡•Ä‡§ï‡•Ä ‡§ú‡§ø‡§≤‡•á ‡§ï‡§æ ‡§°‡•á‡§ü‡§æ ‡§¶‡§ø‡§ñ‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§•‡§æ‡§® ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç',
      detectBtn: '‡§Æ‡•á‡§∞‡§æ ‡§∏‡•ç‡§•‡§æ‡§® ‡§ñ‡•ã‡§ú‡•á‡§Ç',
      skipBtn: '‡§õ‡•ã‡§°‡§º‡•á‡§Ç, ‡§Æ‡•à‡§Ç ‡§ñ‡•Å‡§¶ ‡§ö‡•Å‡§®‡•Ç‡§Ç‡§ó‡§æ',
      detecting: '‡§∏‡•ç‡§•‡§æ‡§® ‡§ñ‡•ã‡§ú‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...',
      benefits: [
        'üéØ ‡§Ü‡§™‡§ï‡•á ‡§ú‡§ø‡§≤‡•á ‡§ï‡§æ ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§°‡•á‡§ü‡§æ',
        'üìä ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø MGNREGA ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§®',
        '‚ö° ‡§§‡•á‡§ú‡§º ‡§î‡§∞ ‡§∏‡§ü‡•Ä‡§ï ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä'
      ],
      privacy: 'üîí ‡§Ü‡§™‡§ï‡•Ä ‡§®‡§ø‡§ú‡§§‡§æ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§π‡•à - ‡§π‡§Æ ‡§ï‡•á‡§µ‡§≤ ‡§ú‡§ø‡§≤‡§æ ‡§ñ‡•ã‡§ú‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•ç‡§•‡§æ‡§® ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç'
    },
    en: {
      title: 'üìç Find Your Location',
      subtitle: 'We would like to know your location to show data for your nearest district',
      detectBtn: 'Detect My Location',
      skipBtn: 'Skip, I\'ll choose manually',
      detecting: 'Detecting location...',
      benefits: [
        'üéØ Instant data for your district',
        'üìä Local MGNREGA performance',
        '‚ö° Fast and accurate information'
      ],
      privacy: 'üîí Your privacy is safe - we only use location to find your district'
    }
  };

  const t = translations[language];

  const handleDetectLocation = async () => {
    setIsDetecting(true);
    setError('');
    setProgress('');

    try {
      const { detectDistrict } = await import('../utils/location');
      
      const district = await detectDistrict((progressMsg) => {
        setProgress(progressMsg);
      });

      if (district) {
        onLocationDetected(district);
      }
    } catch (err) {
      setError(err.message);
      setIsDetecting(false);
    }
  };

  return (
    <div className="location-permission">
      <div className="location-card">
        <div className="location-header">
          <h2>{t.title}</h2>
          <p>{t.subtitle}</p>
        </div>

        <div className="location-benefits">
          {t.benefits.map((benefit, index) => (
            <div key={index} className="benefit-item">
              {benefit}
            </div>
          ))}
        </div>

        <div className="location-actions">
          <button 
            className="detect-btn"
            onClick={handleDetectLocation}
            disabled={isDetecting}
          >
            {isDetecting ? t.detecting : t.detectBtn}
          </button>
          
          <button 
            className="skip-btn"
            onClick={onSkip}
            disabled={isDetecting}
          >
            {t.skipBtn}
          </button>
        </div>

        {progress && (
          <div className="progress-message">
            {progress}
          </div>
        )}

        {error && (
          <div className="error-message">
            ‚ùå {error}
            <button 
              className="retry-btn"
              onClick={handleDetectLocation}
            >
              {language === 'hi' ? '‡§´‡§ø‡§∞ ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç' : 'Try Again'}
            </button>
          </div>
        )}

        <div className="privacy-note">
          {t.privacy}
        </div>
      </div>
    </div>
  );
};

export default LocationPermission;